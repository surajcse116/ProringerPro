package com.android.llc.proringer.pro.proringerpro.cropImagePackage;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.util.TypedValue;

public class ContextCompat {
    /**
     * Returns a drawable object associated with a particular resource ID.
     * <p>
     * Starting in {@link VERSION_CODES#LOLLIPOP}, the
     * returned drawable will be styled for the specified Context's theme.
     *
     * @param id The desired resource identifier, as generated by the aapt tool.
     *           This integer encodes the package, type, and resource entry.
     *           The value 0 is an invalid identifier.
     * @return Drawable An object that can be used to draw this resource.
     */
    static Drawable getDrawable(Context context, int id) {
        if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {
            return context.getDrawable(id);
        } else if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
            //noinspection deprecation
            return context.getResources().getDrawable(id);
        } else {
            // Prior to JELLY_BEAN, Resources.getDrawable() would not correctly
            // retrieve the final configuration density when the resource ID
            // is a reference another Drawable resource. As a workaround, try
            // to resolve the drawable reference manually.
            final int resolvedId;
            TypedValue sTempValue = new TypedValue();
            context.getResources().getValue(id, sTempValue, true);
            resolvedId = sTempValue.resourceId;
            //noinspection deprecation
            return context.getResources().getDrawable(resolvedId);
        }
    }
}
